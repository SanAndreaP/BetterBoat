buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = 'CodeChicken'
            url = 'http://chickenbones.net/maven/'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev'
        classpath 'codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev'
        classpath 'codechicken:NotEnoughItems:1.7.10-1.0.5.110:dev'
    }
}

task downloadBookshelf(type: LibDownloader) {
	sourceUrl = 'http://minecraft.curseforge.com/projects/bookshelf/files/2274153/download'
    target = file('libs/Bookshelf.jar')
}

apply plugin: 'idea'
idea {
    module {
        inheritOutputDirs = true
    }
}

apply plugin: 'forge'

version = "1.7.10-1.1.0"
group = "de.sanandrew.mods"
archivesBaseName = "BetterBoat"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "minecraft"
}

setupDecompWorkspace.finalizedBy downloadBookshelf
setupDevWorkspace.finalizedBy downloadBookshelf

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main {
        java { srcDir 'java' }
        resources { srcDir 'resources' }
    }
}

repositories {
    maven {
        name = 'CodeChicken'
        url = 'http://chickenbones.net/maven/'
    }
}

dependencies {
    compile 'codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev'
    compile 'codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev'
    compile 'codechicken:NotEnoughItems:1.7.10-1.0.5.110:dev'
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

task sourceJar(type: Jar) {
    from sourceSets.main.java
    appendix = 'src'
    archiveName = "${baseName}-${version}-${appendix}.jar"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = 'deobf'
    archiveName = "${baseName}-${version}-${appendix}.jar"
}

configurations {
    deployDev
}

artifacts {
    archives deobfJar
    archives sourceJar
    archives jar
    deployDev deobfJar
}

project.ext {
    releaseRepoUrl = "file://${project(':').projectDir}/maven-repo/"
}

uploadDeployDev {
    repositories.mavenDeployer {
        pom.artifactId = project.name
        pom.version = project.version + '-deobf'
        repository(url: project.releaseRepoUrl)
    }
}

class LibDownloader extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
       ant.get(src: sourceUrl, dest: target)
    }
}